@model IEnumerable<Services.Helper.AsofStock>

@{
    ViewBag.Title = "View";
    decimal AUP = 0;
    

}

<link href="~/Content/DataTables/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />


<script src="~/Scripts/jquery-1.12.4.min.js"></script>

<script src="~/Scripts/DataTables/AJCDataTables/jquery.dataTables.min.js"></script>
<script src="~/Scripts/DataTables/AJCDataTables/dataTables.buttons.min.js"></script>
<script src="~/Scripts/DataTables/AJCDataTables/jszip.min.js"></script>
<script src="~/Scripts/DataTables/AJCDataTables/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables/AJCDataTables/vfs_fonts.js"></script>
<script src="~/Scripts/DataTables/AJCDataTables/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables/AJCDataTables/buttons.print.min.js"></script>



<script type="text/javascript">
    $(document).ready(function () {
        $.noConflict();
        $('#example').DataTable({
            "iDisplayLength": 100,
            dom: 'Bfrtip',

            buttons: [
                {
                    extend: 'pdf',
                    title: 'AL JABER KMS - Current Stock Report',
                    footer: true

                },
                {
                    extend: 'excel',
                    title: 'AL JABER KMS - Current Stock Report',
                    footer: true

                },
                {
                    extend: 'print',
                    title: 'AL JABER KMS - Current Stock Report',
                    footer: true
                }
            ]
        });
    });
</script>



<h2>Stock As off - @DateTime.Now</h2>

@using (Html.BeginForm("StockAsOf", "Stock", FormMethod.Post))

{
    <P>
        @Html.DropDownList("cmbCategory", ViewBag.Category as SelectList, "Fill by Category", new { onchange = "this.form.submit();", style = "width:100%;", @class = "form-control" })
    </P>
}



<table class="table" id="example" >
    <thead>
        <tr>

            <th>
                @Html.DisplayName("Category")
            </th>
            <th>
                @Html.DisplayName("Item")
            </th>
            <th>
                @Html.DisplayName("Unit")
            </th>
            <th>
                @Html.DisplayName("Balance Quantity")
            </th>
            <th>
                @Html.DisplayName("Current AUP")
            </th>
            <th>
                @Html.DisplayName("Total Amount")
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Cateogry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentStock)
                </td>
                <td>
                    @if (item.CurrentStock > 0 && item.CostofGood > 0)
                    {
                        @Math.Round(@Convert.ToDecimal(item.CostofGood / Convert.ToDecimal(item.CurrentStock)), 2)
                        AUP = @Math.Round(@Convert.ToDecimal(item.CostofGood / Convert.ToDecimal(item.CurrentStock)), 2);

                    }
                    else
                    {
                        @:0
                    }

                </td>
                <td>
                    @Math.Round(item.CostofGood,2) 
                    

                  
                </td>

            </tr>
        }
    </tbody>

    <tfoot>
        <tr>
            <td><b>Total:</b></td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td><b>@Math.Round(Convert.ToDecimal(Model.Sum(b => b.CostofGood)),2)</b></td>
        </tr>

    </tfoot>
</table>
